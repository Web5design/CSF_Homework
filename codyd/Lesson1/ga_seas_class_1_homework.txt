HOMEWORK 1

Software Engineering at Scale Rudd Taylor

1￼	Read “How to Count”, http://stevenf.com/books
	Without compiling or running these, what do these cryptically-named methods print? 
	
	1.
	public static void foo() { 						/**public class named foo, no return or parameters */
		int bar = 2;								/**initialize bar as an integer, set it to '2'  */
		int baz = bar + bar + 1; 					/**initialize baz as an integer, set it to bar + bar + 1 (initially 2 + 2 + 1 = 5 ) */
		int i = 0;									/**initialize i as integer, set it to '0' */
		while (i < baz) {							/**while i is less than baz (set to 5) */
			boolean bing = i % 2 == 1;				/**initialize boolean bing to equal remainder of i divided by 2, set to true if remainder equals 1 */
			if (bing) System.out.println("bing!"); 	/**if bing is true, print out "bing!" to screen */
			i += 1;									/**increase value of i by one */
			System.out.println("blip!"); 			/**print out blip */
		}
		System.out.println(i); 						/**print out value of i (after while loop is finished) */
	}
	
	Output:
	i=0
	bing = 0 divided by 2 = nil, remainder == 1? false
	i=1
	"blip!"
	i=1
	bing = 1 divided by 2 = nil (or .5), remainder 1 == 1? true, because it's an integer
	i=2
	"blip!"
	bing = 2 divided by 2 = 1, remainder 0 == 1? false
	i=3
	"blip!"
	bing = 3 divided by 2 = 1, remainder 1 ==1? true
	"bing!"
	i=4
	"blip!"
	bing = 4 divided by 2 = 2, remainder 0 ==1? false
	i=5
	"blip!"
	"5"
	
	Output:
	blip!
	bing!
	blip!
	blip!
	bing!
	blip!
	blip!
	5
	
	
	2.
	public static void foo() {			/**initialize public class, no return and no parameters */
	int odd = 0;						/**initialize odd=0, integer
	int even = 1;						/**initialize even=1, integer
	for (; odd < 8; odd += 2) { 		/**while odd is less than 8, do this loop, add 2 at the end of every loop
		even += odd; 					/**shorthand for even = even + odd
		System.out.println(even + odd); /**output even plus odd
		}
	}
	
	odd = 0
	even = 1
	is odd=0 < 8, yes
	even = 1 + 0 = 1
	Println = 1 + 0 = "1"
	odd = 0 + 2 = 2
	is odd=2 < 8, yes
	even = 1 + 2 = 3
	Println = 3 + 2 = 5
	odd = 2 + 2 = 4
	is odd=4 < 8, yes
	even = 3 + 4 = 7
	Println = 7 + 4 = 11
	odd = 4 + 2 = 6
	is odd=6 < 8, yes
	even = 7 + 6 = 13
	Println = 13 + 6 = 19
	odd = 6 + 2 = 8
	is odd=8 < 8, no
	
	
	---
	1
	5
	11
	19


	3.
	public static void foo() {					/**initialize foo class, no returns or parameters */
		for (int i = 1; i < 10; i+=1) {			/**loop 9 times (starting at 1, not 0) */
			if (bar(i) == "even") {				/**Send value of i to bar class, if return equals "even" then do the following */
				System.out.println("42!");		/**Print out "42!"*/
				return;							/**exit and stop execution of class -- only one value returned?*/
			}
			else 								/**otherwise print out "oh no!"*/
				System.out.println("oh no!"); 
				return; }
		}
		
	public static String bar(int i) {			/**initialize bar class, returns a string and takes one integer as a parameter */
		if (i % 2 == 0) {						/**does value of i divided by 2 have no remainder? If so, return "odd" *//
			return "odd";
		}
		else {
			return "even";						/**Otherwise, return "even"*/
		}

	---
	"42!"
	